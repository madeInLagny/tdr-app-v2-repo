This site holds the source code of the tradedutyrefund.com, fr.tradedutyrefund.com and it.tradedutyrefund.com sites.
Updates to sites must be done in this repo.
The building process creates 3 outputs: tdrENBuild, tdrFRBuild and tdrITBuild. Those outputs have their own repos hosted on github pages.

** To update tradedutyrefund.com, fr.tradedutyrefund.com and it.tradedutyrefund.com, run 'npm run build' in this repo, save all commits (including those in the built directories) and synchronise with Github. **

Do not forget to request an indexation from Google Search Console after page updates.

# Website Structure

## Pages

Pages are html files located in the src folder..

## Blocks

Pages are made of blocks which hold repeatable code of HTML. All blocks are copied in the blocks folder.

## Localization

Localized text and urls are copied at building time. Local files are copied in the lang folder

## Build

Build process uses gulp.

## Template documentation

https://docs.semicolonweb.com/ and https://canvastemplate.com/

## Ebook Page

The page url is set on the advertissement banner. Users who click on the banner are directed to this page.
They are requested to leave their name and email address to receive a link to download the ebook.
The form submits to staticforms.xyz
staticforms.xyz sends an email to ebook@tradedutyrefund.com for every form submitted
The Google appScript "Ebook Email Automation" file (in the Drive Website folder) checks every minute for incoming email, parse new email to extract user email and generates an email with a link to download.

## Haikei.app svg into data uri

To use Haikei app svg as a section background, the svg must be converted into data uri. Use this converter: https://www.svgbackgrounds.com/tools/svg-to-css/

## Save first video frame

https://ezgif.com/video-to-jpg
Set video range from 0 to 0.1s
Download pictures as zip

## Home video and poster size

1920x1080
Poster resolution 96ppp

## Responsive font calculator

https://fluid.style/type?min=1.2&max=2&min-bp=20&max-bp=77.5&unit=%22rem%22

## Add icons to a page

(link to Bootstrap Icons CDN already in the head block)

Use this pattern: <i class="bi-question-circle-fill"></i>

The list of available icons is here: https://icons.getbootstrap.com/

## Updates to do

Search for MAJ

## Traduction des fichiers langues

https://github.com/mololab/json-translator

CLI has been installed globally
Type: jsontt src/lang/en/jocelyn-montpert.json --module google --from en --to ar fr zh-CN

## eBook Page

- The form uses StaticForms.xyz.
- the email used to create the ID is staticFormsEbook@tradedutyrefund.com
- once the form is filled, an email is sent to that email address
- an appScript file (Ebook Email Automation) handles incoming mails

## recaptcha

- The recaptcha access is on
  url: https://console.cloud.google.com/security/recaptcha/6LfK0JYqAAAAACn4qq-1KudtU3Yx77odbPPA76z7/integration?hl=fr&inv=1&invt=Abjrlg&project=tdr-recaptcha-1733759401379
- Profil: jocelyn.montpert@tradedutyrefund.com
- key details: https://www.google.com/recaptcha/admin/site/714526922
- We use the "recaptcha-v3" npm package for implementation

## URL Campaign Catcher
This method sends a POST to a Google Sheet "Campaign URL" that has a webapp associated to it in AppScript.
The WebApp collects url campaign data from this site and logs them in a google sheet.

## Install Node.js and NPM on Windows.
1. Download and run the latest version of nodist (https://github.com/nodists/nodist)
2. Run "unblock-file -path "C:\Program Files (x86)\Nodist\bin\nodist.ps1" in PowerShell as administrator
3. run nodist global 22.X (or whatever the latest node version is)
4. If nodist is still blocked by windows, change windows script policies before and after running nodist.
-> Before: run in PowerShell as administrator Set-ExecutionPolicy -ExecutionPolicy RemoteSigned
-> After: run in PowerShell as administrator Set-ExecutionPolicy -ExecutionPolicy Restricted 

## Running Scripts Safely
In order to allow gulp and other ps1 files to run without downgrading the Windows 
Script Policy, run "Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process"
in the VS terminal first. This allows ps1 files (like gulp) to be run. But the exception
is only allowed for the session and is removed when the VS terminal is closed


## HTML in json files!
New since April 2025, encoded html (like a tags) can be included in json i18 files. They must be encoded using this site:
https://emn178.github.io/online-tools/html_encode.html. They will be decoded by the gulp process.

Exemple d'un bouton:
&lt;a href=&quot;contact-us.html?utm_source=Website&amp;utm_medium=FAQ&amp;utm_campaign=US-eCom-DDP&quot; class=&quot;text-decoration-underline&quot;&gt;clicking here&lt;/a&gt;


## Q&A pages
When new pages or updates to existing pages are needed, modify the QAs.json file first for content. If changes are required to the structure, use the QAPageTemplate.
Once changes are made, type "node generateQAPages.js" in the terminal to generate the new pages.


## Word to HTML
This tool convert plain text to HTML syntax: https://text-html.com/

## noindex  
To remove a page from bot indexes add a noindex entry to the header block like this:

@@include('src/blocks/head/metatags.html', {"OGImage":"https://tradedutyrefund.com/images/OGImage.png",
	"description": "${{noIndex.description}}$",
	"title": "${{noIndex.title}}$",
	"path": "${{noIndex.path}}$",
	"noindex":"true"
	})


## Flags/Drapeaux
Les flags du questionnaire proviennent de cette addresse: https://flagicons.lipis.dev/